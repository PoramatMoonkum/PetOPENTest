import 'package:cloud_firestore/cloud_firestore.dart';
import 'package:flutter/material.dart';
import 'package:intl/intl.dart';
import 'package:firebase_auth/firebase_auth.dart';

class BookListView extends StatefulWidget {
  const BookListView({Key? key}) : super(key: key);

  @override
  State<BookListView> createState() => _BookListViewState();
}

class _BookListViewState extends State<BookListView> {
  List<Map<String, dynamic>> _books = [];
  late QuerySnapshot _querySnapshotUser;
  final User? currentUser = FirebaseAuth.instance.currentUser;

  @override
  void initState() {
    super.initState();
    getBooks();
  }

  Future<void> getBooks() async {
    FirebaseFirestore firestore = FirebaseFirestore.instance;

    if (currentUser != null) {
      // ดึงข้อมูลการจองที่เกี่ยวข้องกับผู้ใช้ในฐานะ user_id
      QuerySnapshot userBookings = await firestore
          .collection('books')
          .where('user_id', isEqualTo: currentUser!.uid)
          .get();

      // ดึงข้อมูลการจองที่เกี่ยวข้องกับผู้ใช้ในฐานะ sitter_id
      QuerySnapshot sitterBookings = await firestore
          .collection('books')
          .where('sitter_id', isEqualTo: currentUser!.uid)
          .get();

      QuerySnapshot querySnapshotUser =
          await firestore.collection('users').get();

      final allUserBookings = userBookings.docs
          .map((doc) => doc.data() as Map<String, dynamic>)
          .toList();

      final allSitterBookings = sitterBookings.docs
          .map((doc) => doc.data() as Map<String, dynamic>)
          .toList();

      // รวมผลลัพธ์จากทั้งสองการค้นหา
      final allBookings = [...allUserBookings, ...allSitterBookings];

      allBookings.sort((a, b) => (b['expiry'] as Timestamp)
          .compareTo(a['expiry'] as Timestamp)); // เรียงลำดับตามวันที่หมดอายุ

      final doneBookings =
          allBookings.where((book) => book['status'] == 'done').toList();

      setState(() {
        _books = doneBookings;
        _querySnapshotUser = querySnapshotUser;
      });
    }
  }

  @override
  Widget build(BuildContext context) {
    return ListView.separated(
      itemCount: _books.length,
      separatorBuilder: (context, index) => SizedBox(height: 10),
      itemBuilder: (context, index) {
        var book = _books[index];
        for (DocumentSnapshot userDataMap in _querySnapshotUser.docs) {
          if (userDataMap.id == book['user_id'] ||
              userDataMap.id == book['sitter_id']) {
            var expiryDateTime = book['expiry'];
            String dateString =
                DateFormat('dd/MM/yyyy').format(expiryDateTime.toDate());

            return Card(
              color: Color.fromARGB(255, 253, 253, 253),
              child: ListTile(
                title: Text('ชื่อ: ${userDataMap['name'] ?? ''}'),
                subtitle: Text(
                    'Status: ${book['status'] ?? 'matched'}\nชื่อสัตว์เลี้ยง: ${book['pet_name'].toString() ?? ''}\nวันที่: $dateString\nระยะเวลาที่ฝาก: ${book['day'].toString() ?? ''}วัน'),
              ),
            );
          }
        }
        return SizedBox.shrink(); // ไม่แสดงอะไรถ้าไม่มีข้อมูลตรงกัน
      },
    );
  }
}
